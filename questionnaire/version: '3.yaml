version: '3.8'

services:
  # envoy:
  #   image: envoyproxy/envoy-alpine:v1.14-latest
  #   container_name: envoy
  #   volumes:
  #     - ./envoy.yaml:/etc/envoy/envoy.yaml
  #   ports:
  #     - "8080:8080"
  #     - "9901:9901"
  #   command: ["envoy", "-c", "/etc/envoy/envoy.yaml"]
  #   networks:
  #     - auth_network
  auth_db:
    image: postgres
    env_file:
       - ./auth/.env
    ports:
      - "5435:5432"
    volumes:
      - pgdata2:/var/lib/postgresql/data
      - ./auth/migrations:/docker-entrypoint-initdb.d
    networks:
      - auth_network
  auth_service:
    build:
      context: ./auth
    depends_on:
      - auth_db
      - notification_service
    ports:
      - "4000:4000"
    networks:
      - auth_network
  notification_db:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    env_file:
       - ./notification/.env
    networks:
      - auth_network
  notification_service:
    build:
      context: ./notification
    depends_on:
      - notification_db
    ports:
      - "3000:3000"
    networks:
      - auth_network
  questionnaire_db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=hush
      - POSTGRES_DB=questionnaire_service_db
    ports:
      - "5431:5432"
  questionnaire_service:
    build:
      context: ./questionnaire
    ports:
      - "8085:8085"
      - "9091:9091"
    networks:
      - questionnaire-network
    # environment:
    #   - DB_SOURCE =postgresql://root:hush@questionnaire_db:5432/questionnaire_service_db?sslmode=disable
    depends_on:
      - questionnaire_db
    # command: [ "/app/main" ]
    # entrypoint: ["/app/wait-for.sh", "questionnaire_db:5432", "--", "/app/start.sh"]
  scheduler_db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=hush
      - POSTGRES_DB=scheduler_service_db
    ports:
      - "5430:5432"
  scheduler_service:
    build:
      context: ./scheduler
    ports:
      - "8082:8082"
      - "9090:9090"
    networks:
      - scheduler-network
    environment:
      - DB_SOURCE =postgresql://root:hush@scheduler_db:5430/scheduler_service_db?sslmode=disable
    depends_on:
      - scheduler_db
    command: [ "/app/main" ]
    entrypoint: ["/app/wait-for.sh", "scheduler_db:5430", "--", "/app/start.sh"]


volumes:
  pgdata2:
  mongodb_data:
networks:
  auth_network:
    driver: bridge
  questionnaire-network:
    driver: bridge
  scheduler-network:
    driver: bridge  





#   scheduler_db:
#     image: postgres:16-alpine
#     env_file:
#        - ./scheduler/app.env
#     ports:
#       - "5432:5432"
#     volumes:
#       - data-scheduler-volume:/var/lib/postgresql/data
#     networks:
#       - scheduler-network   
#   scheduler_service:
#     build:
#       context: ./scheduler
#     ports:
#       - "8082:8082"
#       - "9090:9090"
#     networks:
#       - scheduler-network
#     environment:
#       - DB_SOURCE=postgresql://root:hush@scheduler_db:5432/scheduler_service_db?sslmode=disable
#     depends_on:
#       - scheduler_db
#     entrypoint: ["/app/wait-for.sh", "scheduler_db:5432", "--", "/app/start.sh"]
#     command: [ "/app/main" ]

# networks:
#   questionnaire-network:
#     driver: bridge
#   scheduler-network:
#     driver: bridge      
# volumes:
#   data-volume:
#   data-questionnaire-volume:
#   data-scheduler-volume:    