services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"    
    networks:
      - authentication-network
    command: ["redis-server", "--bind", "redis", "--port", "6379"]

  authentication_db:
    image: postgres:16-alpine
    env_file:
       - ./authentication/app.env
    ports:
      - "5442:5432"
    volumes:
      - data-authentication-volume:/var/lib/postgresql/data
    networks:
      - authentication-network

  authentication_service:
    build:
      context: ./authentication
    ports:
      - "9098:9098"
      - "8089:8089"
    networks:
      - authentication-network
    environment:
      - DB_SOURCE=postgresql://root:hush@authentication_db:5432/authentication_service_db?sslmode=disable
      - REDIS_ADDRESS=redis:6379
    depends_on:
      - authentication_db
      - redis
    entrypoint: ["/app/wait-for.sh", "authentication_db:5432", "--", "/app/start.sh"]
    command: [ "/app/main" ]

  notification_db:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    env_file:
       - ./notification/.env
    networks:
      - notification-network

  notification_service:
    build:
      context: ./notification
    depends_on:
      - notification_db
    ports:
      - "3000:3000"
    networks:
      - notification-network

  questionnaire_db:
    image: postgres:16-alpine
    env_file:
       - ./questionnaire/app.env
    ports:
      - "5432:5432"
    volumes:
      - data-questionnaire-volume:/var/lib/postgresql/data
    networks:
      - questionnaire-network      

  questionnaire_service:
    build:
      context: ./questionnaire
    ports:
      - "8085:8085"
      - "9091:9091"
    networks:
      - questionnaire-network
    environment:
      - DB_SOURCE=postgresql://root:hush@questionnaire_db:5432/questionnaire_service_db?sslmode=disable
    depends_on:
      - questionnaire_db
    entrypoint: ["/app/wait-for.sh", "questionnaire_db:5432", "--", "/app/start.sh"]
    command: [ "/app/main" ]

  scheduler_db:
    image: postgres:16-alpine
    env_file:
       - ./scheduler/app.env
    ports:
      - "5423:5432"
    volumes:
      - data-scheduler-volume:/var/lib/postgresql/data
    networks:
      - scheduler-network      

  scheduler_service:
    build:
      context: ./scheduler
    ports:
      - "8082:8082"
      - "9090:9090"
    networks:
      - scheduler-network
    environment:
      - DB_SOURCE=postgresql://root:hush@scheduler_db:5432/scheduler_service_db?sslmode=disable
    depends_on:
      - scheduler_db
    entrypoint: ["/app/wait-for.sh", "scheduler_db:5432", "--", "/app/start.sh"]
    command: [ "/app/main" ]

networks:
  authentication-network:
    driver: bridge  
  notification-network:
    driver: bridge          
  questionnaire-network:
    driver: bridge   
  scheduler-network:
    driver: bridge      

volumes:
  mongodb_data:
  data-questionnaire-volume:
  data-authentication-volume:
  data-scheduler-volume:
