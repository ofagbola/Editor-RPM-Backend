syntax = "proto3";

package chat;
import "google/protobuf/descriptor.proto";

option go_package = "github.com/example/websocket-chat";


message Chat {
  string id = 1;
  string recipientId = 2;
  string recipientName=9;
  string text = 3;
  string timestamp = 4;
  string read_at = 5;
  string message_type = 6;
  string document_url = 7;
  bool missed=8; // to see if the call was missed

}

message ChatListRequest {
  string userId = 1;
}

message OneOnOneChatRequest {
  string userId = 1;
  string recipientId=2;
}

message ChatResponse {
  repeated Chat chats = 1;
  bool hasMoreChats = 2;
}

message SendMessageRequest {
  string userId = 1;
  string text = 2;
}

message CallSession {
  string sessionId = 1;
  string userId = 2;
  string type = 3; // "audio" or "video"
  int64 startTime = 4;
  int64 endTime = 5;
}

message RecordingRequest {
  string userId = 1;
  string doctorId = 2;
  string fileType = 3; // "audio", "video", or "file"
}

message Prescription {
  string prescriptionId = 1;
  string patientId = 2;
  string doctorId = 3;
  string medication = 4;
  string dosage = 5;
  string frequency = 6;
}

message PrescriptionRequest {
 string patientId = 1;
  string doctorId = 2;
}

message Test{
  string name=1;
}

service ChatService {
  rpc Testing(Test) returns (Test){}
  rpc FetchChatList(ChatListRequest) returns (ChatResponse) {}
  rpc FetchOneOnOneChat(OneOnOneChatRequest) returns (ChatResponse) {}
  rpc RecordCallSession(CallSession) returns (CallSession) {}
}

// service FileService {
//   rpc FetchFile(RecordingRequest) returns (bytes) {}
// }

// service PrescriptionService {
//   rpc CreatePrescription(Prescription) returns (Prescription) {}
//   rpc FetchPrescription(PrescriptionRequest) returns (repeated Prescription) {}
// }


